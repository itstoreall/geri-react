{"version":3,"sources":["components/ColorPicker/ColorPickerStyle.js","components/ColorPicker/ColorPicker.jsx","pages/ColorPickerPage.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["createUseStyles","option","display","margin","width","height","border","outline","cursor","transition","active","transform","ColorPicker","options","useState","activeOptInd","setActiveOptInd","useStyles","makeOptionClassName","index","optionClasses","push","join","label","map","color","className","type","onClick","setActiveInd","style","backgroundColor","ColorPickerPage","colors","_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","length","err","unsupportedIterableToArray","nonIterableRest","_arrayWithHoles","Array","isArray","_nonIterableRest","TypeError"],"mappings":"qeAEeA,cAAgB,CAC7BC,OAAQ,CACNC,QAAS,eACTC,OAAQ,GACRC,MAAO,IACPC,OAAQ,IACRC,OAAQ,OACRC,QAAS,OACTC,OAAQ,UAERC,WAAY,0BAGdC,OAAQ,CACNC,UAAW,gB,OC2CAC,EAxDK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACKC,mBAAS,GADd,mBAC5BC,EAD4B,KACdC,EADc,OAERC,IAAnBhB,EAF2B,EAE3BA,OAAQS,EAFmB,EAEnBA,OAOVQ,EAAsB,SAACC,GAC3B,IAAMC,EAAgB,CAACnB,GAGvB,OAFAkB,IAAUJ,GAAgBK,EAAcC,KAAKX,GAEtCU,EAAcE,KAAK,MAIpBC,EAAUV,EAAQE,GAAlBQ,MAER,OACE,gCACE,gGAAiBA,KAChBV,EAAQW,KAAI,WAAmBL,GAAnB,IAAGI,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAV,OACX,wBAEEC,UAAWR,EAAoBC,GAC/BQ,KAAK,SACLC,QAAS,kBAvBI,SAACT,GACpBH,EAAgBG,GAsBKU,CAAaV,IAC5BW,MAAO,CACLC,gBAAiBN,IALdF,U,SCdAS,UATS,WACtB,OACE,eAAC,WAAD,WACE,8CACA,cAAC,EAAD,CAAanB,QAASoB,S,kGCJb,SAASC,EAAeC,EAAKC,GAC1C,OAAO,OAAAC,EAAA,GAAeF,ICLT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXE,QAA4BA,OAAOC,YAAYC,OAAOL,GAAjE,CACA,IAAIM,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKZ,EAAIG,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKpB,KAAKyB,EAAGI,QAETd,GAAKK,EAAKU,SAAWf,GAH8CM,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GDnBuB,CAAqBN,EAAKC,IAAM,OAAAiB,EAAA,GAA2BlB,EAAKC,IAAM,OAAAkB,EAAA,O,gCELvF,SAASC,EAAgBpB,GACtC,GAAIqB,MAAMC,QAAQtB,GAAM,OAAOA,EADjC,mC,gCCAe,SAASuB,IACtB,MAAM,IAAIC,UAAU,6IADtB","file":"static/js/ColorPicker.d88160c7.chunk.js","sourcesContent":["import { createUseStyles } from \"react-jss\";\n\nexport default createUseStyles({\n  option: {\n    display: \"inline-block\",\n    margin: 10,\n    width: 110,\n    height: 110,\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\",\n\n    transition: \"transform 250ms linear\",\n  },\n\n  active: {\n    transform: \"scale(1.2)\",\n    // border: \"5px solid skyblue\",\n  },\n  // *** Добавляет border к активному в инлайн стилях\n  // optionActive: {\n  //   transform: \"scale(1.1)\",\n  // },\n});\n","import React, { useState } from \"react\";\nimport useStyles from \"./ColorPickerStyle\";\n\nconst ColorPicker = ({ options }) => {\n  const [activeOptInd, setActiveOptInd] = useState(4);\n  const { option, active } = useStyles();\n\n  const setActiveInd = (index) => {\n    setActiveOptInd(index);\n  };\n\n  // Создаем масс с именами стилей и пушим active если совпадает index\n  const makeOptionClassName = (index) => {\n    const optionClasses = [option];\n    index === activeOptInd && optionClasses.push(active);\n\n    return optionClasses.join(\" \");\n  };\n\n  // Показывает label активного цвета\n  const { label } = options[activeOptInd];\n\n  return (\n    <div>\n      <p>Выбран цвет: {label}</p>\n      {options.map(({ label, color }, index) => (\n        <button\n          key={label}\n          className={makeOptionClassName(index)}\n          type=\"button\"\n          onClick={() => setActiveInd(index)}\n          style={{\n            backgroundColor: color,\n          }}\n        ></button>\n      ))}\n    </div>\n  );\n\n  // *** Добавляет border к активному в инлайн стилях\n  // return (\n  //   <div>\n  //     {options.map(({ label, color }, index) => (\n  //       <button\n  //         key={label}\n  //         className={option}\n  //         type=\"button\"\n  //         style={{\n  //           backgroundColor: color,\n  //           border: index === activeOptInd ? \"5px solid skyblue\" : \"none\",\n  //         }}\n  //       >\n  //         {color}\n  //       </button>\n  //     ))}\n  //   </div>\n  // );\n};\n\nexport default ColorPicker;\n","import React, { Fragment } from \"react\";\nimport ColorPicker from \"../components/ColorPicker\";\nimport colors from \"../components/ColorPicker/colors.json\";\n\nconst ColorPickerPage = () => {\n  return (\n    <Fragment>\n      <h1>Color Picker</h1>\n      <ColorPicker options={colors} />\n    </Fragment>\n  );\n};\n\nexport default ColorPickerPage;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}