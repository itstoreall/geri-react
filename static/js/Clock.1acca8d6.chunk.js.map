{"version":3,"sources":["components/Clock/ClockStyles.js","components/Clock/Clock.jsx","pages/ClockPage.jsx"],"names":["createUseStyles","clock","fontSize","timerBtn","padding","top","left","right","bottom","textTransform","cursor","color","backgroundColor","border","borderRadius","outline","Clock","useState","Date","time","setTime","s","useStyle","intervalId","useRef","console","log","useEffect","current","setInterval","now","stopTimer","clearInterval","className","toLocaleTimeString","type","onClick","ClockPage"],"mappings":"kJAEeA,cAAgB,CAC7BC,MAAO,CACLC,SAAU,GAEV,SAAU,CACRA,SAAU,KAIdC,SAAU,CACRC,QAAS,CACPC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,IAEVN,SAAU,GACVO,cAAe,YACfC,OAAQ,UACRC,MAAO,QACPC,gBAAiB,OACjBC,OAAQ,OACRC,aAAc,EACdC,QAAS,OAET,UAAW,CACTH,gBAAiB,a,OCcRI,EAvCD,WAAO,IAAD,EACMC,mBAAS,IAAIC,MADnB,mBACXC,EADW,KACLC,EADK,KAEZC,EAAIC,IAGJC,EAAaC,mBAEnBC,QAAQC,IAAIH,GAGZI,qBAAU,WAOR,OANAJ,EAAWK,QAAUC,aAAY,WAC/BJ,QAAQC,IAAIR,KAAKY,OACjBV,EAAQ,IAAIF,QACX,KAGI,WACLa,IACAN,QAAQC,IAAI,YAEb,IAEH,IAAMK,EAAY,WAChBC,cAAcT,EAAWK,UAG3B,OACE,qCACE,oBAAGK,UAAWZ,EAAEpB,MAAhB,2BACgB,+BAAOkB,EAAKe,0BAE5B,wBAAQD,UAAWZ,EAAElB,SAAUgC,KAAK,SAASC,QAASL,EAAtD,sBClBSM,UAfG,WAChB,OACE,qCACE,uCACA,cAAC,EAAD,IAEA,+BACE,oDACA,qDACA","file":"static/js/Clock.1acca8d6.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n  clock: {\n    fontSize: 16,\n\n    '& span': {\n      fontSize: 32,\n    },\n  },\n\n  timerBtn: {\n    padding: {\n      top: 10,\n      left: 20,\n      right: 20,\n      bottom: 10,\n    },\n    fontSize: 16,\n    textTransform: 'uppercase',\n    cursor: 'pointer',\n    color: 'white',\n    backgroundColor: 'teal',\n    border: 'none',\n    borderRadius: 4,\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: 'tomato',\n    },\n  },\n});\n","import { useState, useEffect, useRef } from 'react';\nimport useStyle from './ClockStyles';\n\nconst Clock = () => {\n  const [time, setTime] = useState(new Date());\n  const s = useStyle();\n\n  // useRef() - stable value of the variable\n  const intervalId = useRef();\n\n  console.log(intervalId);\n\n  // componentDidMount\n  useEffect(() => {\n    intervalId.current = setInterval(() => {\n      console.log(Date.now());\n      setTime(new Date());\n    }, 1000);\n\n    // Returns the cleanup function (componentWillUnmount)\n    return () => {\n      stopTimer();\n      console.log('Clear');\n    };\n  }, []);\n\n  const stopTimer = () => {\n    clearInterval(intervalId.current);\n  };\n\n  return (\n    <>\n      <p className={s.clock}>\n        Current time: <span>{time.toLocaleTimeString()}</span>\n      </p>\n      <button className={s.timerBtn} type='button' onClick={stopTimer}>\n        Stop\n      </button>\n    </>\n  );\n};\n\nexport default Clock;\n","import Clock from '../components/Clock';\n\nconst ClockPage = () => {\n  return (\n    <>\n      <h1>Clock</h1>\n      <Clock />\n\n      <ul>\n        <li>use the useState()</li>\n        <li>use the useEffect()</li>\n        <li>use the useRef()</li>\n      </ul>\n    </>\n  );\n};\n\nexport default ClockPage;\n"],"sourceRoot":""}